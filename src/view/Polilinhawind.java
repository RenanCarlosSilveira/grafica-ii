/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.DesenhaObjetos;
import java.awt.Graphics2D;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Polilinha;
import model.Ponto;
import static view.NMain.painelPintura;

/**
 *
 * @author renan
 */
public class Polilinhawind extends javax.swing.JFrame {

    private int contavetor = 0;

    public Polilinhawind() {
        initComponents();
    }
    Polilinha polilinha = new Polilinha();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        linha_innerpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vetorList = new javax.swing.JTable();
        bAddVetorPolilinha = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        y1Polilinha = new javax.swing.JTextField();
        x1Polilinha = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bAddPolilinha = new javax.swing.JButton();
        bRmvVetorPolilinha = new javax.swing.JButton();
        bCancelar = new javax.swing.JButton();
        nomePolilinha = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(400, 400));
        setMaximizedBounds(new java.awt.Rectangle(516, 239, 239, 239));
        setMinimumSize(new java.awt.Dimension(516, 239));
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        linha_innerpanel.setBackground(new java.awt.Color(255, 255, 255));
        linha_innerpanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)), "Adicionar Polilinha", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        vetorList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PONTO", "VALOR X", "VALOR Y"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vetorList.setEnabled(false);
        vetorList.setGridColor(new java.awt.Color(255, 255, 255));
        vetorList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vetorListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vetorList);

        bAddVetorPolilinha.setBackground(new java.awt.Color(255, 255, 255));
        bAddVetorPolilinha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bAddVetorPolilinha.setText(">>");
        bAddVetorPolilinha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bAddVetorPolilinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddVetorPolilinhaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Vetor");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Eixo X:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Eixo Y:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Lista de Vetores");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        bAddPolilinha.setBackground(new java.awt.Color(255, 255, 255));
        bAddPolilinha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bAddPolilinha.setText("Adicionar");
        bAddPolilinha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bAddPolilinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddPolilinhaActionPerformed(evt);
            }
        });

        bRmvVetorPolilinha.setBackground(new java.awt.Color(255, 255, 255));
        bRmvVetorPolilinha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bRmvVetorPolilinha.setText("XX");
        bRmvVetorPolilinha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bRmvVetorPolilinha.setEnabled(false);
        bRmvVetorPolilinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRmvVetorPolilinhaActionPerformed(evt);
            }
        });

        bCancelar.setBackground(new java.awt.Color(255, 255, 255));
        bCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bCancelar.setText("Cancelar");
        bCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Nome:");

        javax.swing.GroupLayout linha_innerpanelLayout = new javax.swing.GroupLayout(linha_innerpanel);
        linha_innerpanel.setLayout(linha_innerpanelLayout);
        linha_innerpanelLayout.setHorizontalGroup(
            linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(linha_innerpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(linha_innerpanelLayout.createSequentialGroup()
                        .addComponent(bCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 297, Short.MAX_VALUE)
                        .addComponent(bAddPolilinha))
                    .addGroup(linha_innerpanelLayout.createSequentialGroup()
                        .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(linha_innerpanelLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(10, 10, 10)
                                .addComponent(nomePolilinha)
                                .addGap(18, 18, 18))
                            .addGroup(linha_innerpanelLayout.createSequentialGroup()
                                .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(linha_innerpanelLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(y1Polilinha, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(bAddVetorPolilinha))
                                    .addGroup(linha_innerpanelLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(x1Polilinha, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(bRmvVetorPolilinha, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(21, 21, 21)))
                        .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))))
                .addContainerGap())
        );
        linha_innerpanelLayout.setVerticalGroup(
            linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, linha_innerpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomePolilinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(linha_innerpanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(x1Polilinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bRmvVetorPolilinha))
                        .addGap(18, 18, 18)
                        .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(y1Polilinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAddVetorPolilinha)))
                    .addGroup(linha_innerpanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(linha_innerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddPolilinha)
                    .addComponent(bCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(linha_innerpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(linha_innerpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bAddPolilinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddPolilinhaActionPerformed
        if(vetorList.getModel().getRowCount() >= 2){
        polilinha.setNome(nomePolilinha.getText());
        DesenhaObjetos.polilinhas.add(polilinha);
        DesenhaObjetos.desenhaObjetos((Graphics2D) painelPintura.getGraphics());
        polilinha = new Polilinha();
        contavetor = 0;
        dispose();
        System.out.println("Adicionou Polilinha");}
        else{
            JOptionPane.showConfirmDialog(null, "Adicione Vetores!", "", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_bAddPolilinhaActionPerformed

    private void bAddVetorPolilinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddVetorPolilinhaActionPerformed
        DefaultTableModel model = (DefaultTableModel) vetorList.getModel();
        if (!x1Polilinha.getText().equals("") && !y1Polilinha.getText().equals("")) {
            Ponto p = new Ponto(Integer.parseInt(x1Polilinha.getText()), Integer.parseInt(y1Polilinha.getText()));
            polilinha.getPontosPolilinha().add(p);
            model.addRow(new Object[]{"Posicao " + contavetor, p.getX(), p.getY()});
            contavetor++;
            System.out.println("Adicinou Vetor!");
            x1Polilinha.setText("");
            y1Polilinha.setText("");// TODO add your handling code here:
        } else {
            JOptionPane.showConfirmDialog(null, "Favor preencher os campos!", "", JOptionPane.PLAIN_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_bAddVetorPolilinhaActionPerformed

    private void vetorListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vetorListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_vetorListMouseClicked

    private void bRmvVetorPolilinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRmvVetorPolilinhaActionPerformed
        //IMPLEMENTAR DEPOIS        // TODO add your handling code here:
    }//GEN-LAST:event_bRmvVetorPolilinhaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Polilinhawind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Polilinhawind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Polilinhawind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Polilinhawind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
                /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Polilinhawind().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddPolilinha;
    private javax.swing.JButton bAddVetorPolilinha;
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bRmvVetorPolilinha;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel linha_innerpanel;
    private javax.swing.JTextField nomePolilinha;
    public static javax.swing.JTable vetorList;
    private javax.swing.JTextField x1Polilinha;
    private javax.swing.JTextField y1Polilinha;
    // End of variables declaration//GEN-END:variables
}
